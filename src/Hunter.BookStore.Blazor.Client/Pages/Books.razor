@page "/books"
@using Hunter.BookStore.Books
@using Hunter.BookStore.Localization
@using Volo.Abp.AspNetCore.Components.Web
@inherits BookStoreComponentBase
@inject IBookAppService BookAppService
@inject AbpBlazorMessageLocalizerHelper<BookStoreResource> LH

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Books"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                @if (CanCreateBook)
                {
                    <Button Color="Color.Primary" Clicked="OpenCreateBookModal">
                        @L["NewBook"]
                    </Button>
                }
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="BookDto" Data="BookList" ReadData="OnDataGridReadAsync" TotalItems="TotalCount"
            ShowPager="true" PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn Width="150px" TItem="BookDto" Field="@nameof(BookDto.Id)" Sortable="false"
                    Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>
                                @if (CanEditBook)
                                {
                                    <DropdownItem Clicked="() => OpenEditBookModal(context)">
                                        @L["Edit"]
                                    </DropdownItem>
                                }
                                @if (CanDeleteBook)
                                {
                                    <DropdownItem Clicked="() => DeleteBookAsync(context)">
                                        @L["Edit"]
                                    </DropdownItem>
                                }
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="BookDto" Field="@nameof(BookDto.Name)" Caption="@L["Name"]" Sortable="true">

                    @* Publish Date *@
                </DataGridColumn>
                <DataGridColumn TItem="BookDto" Field="@nameof(BookDto.PublishDate)" Caption="@L["PublishDate"]" Sortable="true">
                    <DisplayTemplate>
                        @context.PublishDate.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>
                @* Author Name *@
                <DataGridColumn TItem="BookDto" Field="@nameof(BookDto.AuthorName)" Caption="@L["AuthorName"]" Sortable="true">
                    <DisplayTemplate>
                        @context.AuthorName
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="BookDto" Field="@nameof(BookDto.Price)" Caption="@L["Price"]" Sortable="true">
                    <DisplayTemplate>
                        @context.Price
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="BookDto" Field="@nameof(BookDto.CategoryNames)" Caption="@L["Categories"]">
                    <DisplayTemplate>
                        @(String.Join(",", context.CategoryNames))
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>

        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="CreateBookModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewBook"]</ModalTitle>
                <CloseButton Clicked="CloseCreateBookModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="CreateValidationsRef" Model="NewBook" ValidateOnLoad="false">
                    <Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
                        <Items>
                            <Tab Name="Book Information">Book Information</Tab>
                            <Tab Name="Categories">Categories</Tab>
                        </Items>
                        <Content>
                            <TabPanel Name="Book Information">
                                <Validation MessageLocalizer="@LH.Localize">
                                    <Field>
                                        <FieldLabel>@L["Name"]</FieldLabel>
                                        <TextEdit @bind-Text="@NewBook.Name">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </TextEdit>
                                    </Field>
                                </Validation>
                                <Validation MessageLocalizer="@LH.Localize">
                                    <Field>
                                        <FieldLabel>@L["Price"]</FieldLabel>
                                        <NumericEdit @bind-Value="@NewBook.Price">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </NumericEdit>
                                    </Field>
                                </Validation>
                                <Validation MessageLocalizer="@LH.Localize">
                                    <Field>
                                        <FieldLabel>@L["Publish Date"]</FieldLabel>
                                        <DatePicker @bind-Date="@NewBook.PublishDate">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </DatePicker>
                                    </Field>
                                </Validation>
                                <Validation MessageLocalizer="@LH.Localize" Validator="ValidationRule.IsNotEmpty">
                                    <Field>
                                        <FieldLabel>@L["Author"]</FieldLabel>
                                        <SelectList TItem="SelectListItem" TValue="Guid" Data="@AuthorList"
                                            TextField="@((item)=> item.Name)" ValueField="@((item)=> item.Id)"
                                            @bind-SelectedValue="@NewBook.AuthorId" DefaultItemText="Choose an author">
                                            <Feedback>
                                                <ValidationError />
                                            </Feedback>
                                        </SelectList>
                                    </Field>
                                </Validation>
                            </TabPanel>
                            <TabPanel Name="Categories">
                                @if (Categories != null)
                                {
                                    foreach (var item in Categories)
                                    {
                                        <Check TValue="bool" @bind-Checked="item.IsSelected" Size="Size.Large"> @item.Name </Check>
                                    }
                                }
                            </TabPanel>
                        </Content>
                    </Tabs>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseCreateBookModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary" Type="@ButtonType.Submit" PreventDefaultOnSubmit="true"
                    Clicked="CreateBookAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="EditBookModal">
    <ModalBackdrop />
</Modal>